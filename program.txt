
MOVI R1 8            ; R1 = 8
MOVI R2 3            ; R2 = 3
ADD R3 R1 R2         ; R3 = 11 (RAW hazard on R1, R2)
SUB R4 R3 R2         ; R4 = 8 (RAW hazard on R3, R2)
MOVM R4 R0 50        ; MEM[50] = R4 (store 8)
MOVR R5 R0 50        ; R5 = MEM[50] (should get 8, memory hazard with previous MOVM)
XORI R5 15           ; R5 = 8 ^ 15 = 7 (RAW hazard on R5)
JEQ R5 R4 2          ; If R5 == R4 (7==8 false), don't branch
ADD R6 R5 R1         ; R6 = 7 + 8 = 15 (should execute)
JEQ R6 R6 1          ; If R6 == R6 (true), branch forward 2
SUB R7 R1 R2         ; Should be skipped by branch
MOVI R8 99           ; R8 = 99 (should execute after branch)
JMP 15               ; Jump to instruction 15 (skips next instruction)
MOVI R9 123          ; Should be skipped by JMP
MOVI R10 77          ; R10 = 77 (should execute after JMP)